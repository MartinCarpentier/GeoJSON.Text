name: 'Release' 

on:
  push:

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  NUGET_VERSIONING_REGEX: "[0-9]+\\.[0-9]+\\.[0-9]+-[a-zA-Z]+"

  # Project name to pack and publish
  PROJECT_NAME: GeoJSON.Text

   # Official NuGet Feed settings
  NUGET_FEED: https://api.nuget.org/v3/index.json
  NUGET_KEY: ${{ secrets.NUGET_KEY }}

jobs:
  deploy:
    name: 'Deploy to Nuget'
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x
      - name: Install dependencies
        run: dotnet restore src/${{ env.PROJECT_NAME }}.sln
      - name: Build solution
        run: dotnet build src/${{ env.PROJECT_NAME }}.sln -c Release --no-restore
      - name: Create Release NuGet package
        run: |
          $VERSION=${env:GITHUB_REF_NAME}
          if($VERSION[0] -eq "v"){
            $VERSION=$VERSION.substring(1)
          }

          if(!($VERSION -match ${env:NUGET_VERSIONING_REGEX})) {
            throw "Release tag did not contain a valid NUGET version. TAG : ${env:GITHUB_REF_NAME}"
          }
          
          echo "Nuget was created successfully: $VERSION"
      - name: Push to Nuget
        run: dotnet nuget push nuget/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{secrets.NUGET_KEY}} --skip-duplicate